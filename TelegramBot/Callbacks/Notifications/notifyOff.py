from TelegramBot.DataBase.dbRequests import getCityById, deleteNotifications
from telebot import types

async def notifyOff(bot, query, telegram_id, city_id):
    city = getCityById(city_id)
    groups = (len(city['groups']))    
    markup = types.InlineKeyboardMarkup(row_width=1)
    row_buttons = []
    for x in range(groups):
        row_buttons.append(types.InlineKeyboardButton(str(x+1), callback_data = "notifyOffMessage_"+str(telegram_id)+"_"+str(city_id)+"_"+str(x+1)))
    markup.row(*row_buttons)    
    return await bot.send_message(query.from_user.id, "–û–±–µ—Ä—ñ—Ç—å —á–µ—Ä–≥—É —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è/–≤–∏–º–∫–Ω–µ–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó –º."+city['city_name']+
                                   " –¥–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è üîñ", reply_markup=markup)
    
    
async def notifyOffMessage(bot, query, telegram_id, city_id, city_group):
    statusCode = deleteNotifications(telegram_id, city_id, city_group)
    if statusCode == 200:
        return await bot.send_message(query.from_user.id, "üîá –í–∏ –≤–∏–º–∫–Ω—É–ª–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø–æ –ø–æ–¥–∞—á—ñ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó –¥–ª—è "+city_group+"-—ó –≥—Ä—É–ø–∏!", timeout=30)
    return await bot.send_message(query.from_user.id, "‚ÑπÔ∏è –ê–∫—Ç–∏–≤–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø–æ –¥–∞–Ω—ñ–π —á–µ—Ä–∑—ñ –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ!", timeout=30) 